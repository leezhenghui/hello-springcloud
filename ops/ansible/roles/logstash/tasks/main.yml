- name: create logstash directory
  file: >
    state=directory
    path={{ item }}
  with_items:
    - "{{ logs_dir }}"
    - "{{ logstash_move_to }}"
  tags: [logstash]

- name: check archive stat
  stat: path={{ logstash_download_folder }}/{{ logstash_archive }}
  register: logstash_archive_stat

- name: download logstash
  get_url: >
    url={{ logstash_download }}
    dest={{ logstash_download_folder }}
    url_username={{ logstash_download_username }}
    url_password={{ logstash_download_password }}
  register: logstash_was_downloaded
  when: logstash_archive_stat.stat.exists == False
  tags: [logstash]

- name: check logstash home stat
  stat: path={{ logstash_home }}
  register: logstash_home_stat

- name: copy and unpack
  unarchive: >
    src={{ logstash_download_folder }}/{{ logstash_archive }}
    dest={{ logstash_move_to }}
    remote_src=yes
  when: logstash_home_stat.stat.exists == False 
  tags: [logstash]

- name : Copy logstash configuration file
  copy:
    src: "{{ config_file }}"
    dest: "{{ config_dir }}"
    owner: root
    group: root
    mode: 0644
  tags: [logstash]

- name: Start logstash
  shell: "nohup {{ logstash_home }}/bin/logstash -f {{ config_dir }}/{{ config_file }}
    >{{ logs_dir }}/logstash.log 2>&1 &"
  tags: [logstash]

- pause:
    seconds: 10

- name: Check if Logstash is running
  shell: "jps | grep \"Logstash\" | grep -v grep"
  ignore_errors: yes
  changed_when: false
  register: service_logstash_status
  tags: [logstash]

- name: Report status of logstash
  fail:
    msg: |
      Logstash is not running.
      Return code from `grep`:
      {{ service_logstash_status.rc }}
  when: service_logstash_status.rc != 0
  tags: [logstash]

